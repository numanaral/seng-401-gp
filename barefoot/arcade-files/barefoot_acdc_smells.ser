<linked-hash-set>
  <edu.usc.softarch.arcade.antipattern.detection.BdcSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.bmwcarit.barefoot.matcher.ss</name>
        <entities>
          <string>Ignore</string>
          <string>com.bmwcarit.barefoot.spatial.QuadTreeIndexTest</string>
          <string>com.bmwcarit.barefoot.matcher.ServerTest$Server</string>
          <string>com.bmwcarit.barefoot.analysis.DBRCANTest</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherServer</string>
          <string>com.bmwcarit.barefoot.matcher.MinsetTest</string>
          <string>com.bmwcarit.barefoot.analysis.DBCANTest</string>
          <string>com.bmwcarit.barefoot.roadmap.RoadTest</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherServer$AdaptiveOutputFormatter</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherExample</string>
          <string>com.bmwcarit.barefoot.topology.EdgeTest</string>
          <string>com.bmwcarit.barefoot.markov.Factory</string>
          <string>java.lang.Long</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherServer$DebugJSONOutputFormatter</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherTest$1$Entry</string>
          <string>java.text.ParseException</string>
          <string>com.bmwcarit.barefoot.roadmap.RoadMapTest</string>
          <string>Gnomonic</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherTest$1</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherSampleTest</string>
          <string>com.bmwcarit.barefoot.spatial.Intercept</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherServer$GeoJSONOutputFormatter</string>
          <string>com.bmwcarit.barefoot.markov.Sample</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherKStateTest</string>
          <string>com.bmwcarit.barefoot.road.RoadReader</string>
          <string>JSONObject</string>
          <string>com.bmwcarit.barefoot.markov.StateMemory</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherCandidate</string>
          <string>com.bmwcarit.barefoot.analysis.DBSCANTest</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherKState</string>
          <string>com.bmwcarit.barefoot.spatial.Intersect</string>
          <string>com.bmwcarit.barefoot.roadmap.Time</string>
          <string>com.bmwcarit.barefoot.matcher.ServerTest</string>
          <string>com.bmwcarit.barefoot.spatial.SpatialExample</string>
          <string>com.bmwcarit.barefoot.roadmap.RouteTest</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherTest</string>
          <string>java.lang.Error</string>
          <string>java.lang.AssertionError</string>
          <string>com.bmwcarit.barefoot.topology.Dijkstra</string>
          <string>java.util.HashSet</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherServer$SlimJSONOutputFormatter</string>
          <string>com.bmwcarit.barefoot.roadmap.Distance</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherKStateTest$1</string>
          <string>com.bmwcarit.barefoot.topology.Cost</string>
          <string>com.bmwcarit.barefoot.matcher.ServerControl</string>
          <string>com.bmwcarit.barefoot.road.PostGISReaderTest</string>
          <string>java.lang.Boolean</string>
          <string>java.lang.String</string>
          <string>com.bmwcarit.barefoot.road.BfmapReaderTest</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherServer$OutputFormatter</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherSample</string>
          <string>com.bmwcarit.barefoot.topology.DijkstraBenchmark</string>
          <string>com.bmwcarit.barefoot.topology.GraphTest</string>
          <string>JSONArray</string>
          <string>JSONException</string>
          <string>java.lang.NumberFormatException</string>
          <string>java.lang.RuntimeException</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherTransition</string>
          <string>com.bmwcarit.barefoot.roadmap.Testmap</string>
          <string>com.bmwcarit.barefoot.topology.Point</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherFactory</string>
          <string>GeodesicData</string>
          <string>com.bmwcarit.barefoot.topology.Router</string>
          <string>Geodesic</string>
          <string>com.bmwcarit.barefoot.roadmap.TimePriority</string>
          <string>java.lang.Class</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherServer$MatcherResponseFactory</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherKStateTest$1$Entry</string>
          <string>com.bmwcarit.barefoot.roadmap.RoadPointTest</string>
          <string>com.bmwcarit.barefoot.matcher.MatcherServer$InputFormatter</string>
          <string>com.bmwcarit.barefoot.markov.KState</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.bmwcarit.barefoot.tracker.ss</name>
        <entities>
          <string>com.bmwcarit.barefoot.tracker.TemporaryMemoryTest</string>
          <string>com.bmwcarit.barefoot.tracker.TrackerServerTest</string>
          <string>com.bmwcarit.barefoot.tracker.TrackerServer$MatcherResponseFactory</string>
          <string>com.bmwcarit.barefoot.tracker.TemporaryMemory$TemporaryElement</string>
          <string>java.util.Properties</string>
          <string>com.bmwcarit.barefoot.tracker.TemporaryMemory$Publisher</string>
          <string>com.bmwcarit.barefoot.matcher.Matcher</string>
          <string>com.bmwcarit.barefoot.tracker.TemporaryMemoryTest$Tint</string>
          <string>java.util.concurrent.BlockingQueue</string>
          <string>java.lang.Runnable</string>
          <string>java.net.InetAddress</string>
          <string>com.bmwcarit.barefoot.tracker.TemporaryMemory$Factory</string>
          <string>ZMQ.Socket</string>
          <string>com.bmwcarit.barefoot.tracker.TrackerServerTest$Server</string>
          <string>com.bmwcarit.barefoot.tracker.TrackerServer$State</string>
          <string>ZMQ.Context</string>
          <string>com.bmwcarit.barefoot.tracker.TemporaryMemory</string>
          <string>com.bmwcarit.barefoot.tracker.TrackerServer$StatePublisher</string>
          <string>com.bmwcarit.barefoot.tracker.TrackerControl</string>
          <string>com.bmwcarit.barefoot.tracker.TrackerServer</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.bmwcarit.barefoot.topology.ss</name>
        <entities>
          <string>java.lang.UnsupportedOperationException</string>
          <string>java.util.Iterator</string>
          <string>com.bmwcarit.barefoot.topology.AbstractEdge$1</string>
          <string>com.bmwcarit.barefoot.topology.PathTest$Weight</string>
          <string>com.bmwcarit.barefoot.topology.Edge</string>
          <string>ExpectedException</string>
          <string>com.bmwcarit.barefoot.topology.DijkstraTest$Road</string>
          <string>com.bmwcarit.barefoot.topology.AbstractEdge</string>
          <string>com.bmwcarit.barefoot.topology.PathTest$Road</string>
          <string>com.bmwcarit.barefoot.topology.DijkstraTest</string>
          <string>com.bmwcarit.barefoot.topology.PathTest</string>
          <string>Rule</string>
          <string>com.bmwcarit.barefoot.topology.DijkstraTest$Weight</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.bmwcarit.barefoot.roadmap.ss</name>
        <entities>
          <string>com.bmwcarit.barefoot.util.Sextuple</string>
          <string>QuadTree</string>
          <string>java.util.Arrays</string>
          <string>com.bmwcarit.barefoot.analysis.NYCSample</string>
          <string>java.lang.Double</string>
          <string>com.bmwcarit.barefoot.roadmap.RoadPoint</string>
          <string>com.bmwcarit.barefoot.spatial.SpatialOperator</string>
          <string>com.bmwcarit.barefoot.analysis.package-info</string>
          <string>java.util.HashMap</string>
          <string>Logger</string>
          <string>java.lang.Integer</string>
          <string>java.util.ArrayList</string>
          <string>com.bmwcarit.barefoot.roadmap.Loader</string>
          <string>com.bmwcarit.barefoot.road.Heading</string>
          <string>java.lang.Enum</string>
          <string>java.sql.ResultSet</string>
          <string>java.lang.Short</string>
          <string>java.util.Map</string>
          <string>com.bmwcarit.barefoot.roadmap.Route</string>
          <string>com.bmwcarit.barefoot.tracker.package-info</string>
          <string>com.bmwcarit.barefoot.topology.package-info</string>
          <string>com.bmwcarit.barefoot.road.PostGISReader</string>
          <string>com.bmwcarit.barefoot.markov.package-info</string>
          <string>com.bmwcarit.barefoot.util.package-info</string>
          <string>com.bmwcarit.barefoot.roadmap.RoadMap</string>
          <string>com.bmwcarit.barefoot.road.package-info</string>
          <string>com.bmwcarit.barefoot.spatial.package-info</string>
          <string>com.bmwcarit.barefoot.spatial.QuadTreeIndex</string>
          <string>com.bmwcarit.barefoot.matcher.package-info</string>
          <string>com.bmwcarit.barefoot.spatial.SpatialIndex</string>
          <string>java.util.Collection</string>
          <string>java.util.Set</string>
          <string>com.bmwcarit.barefoot.roadmap.Road</string>
          <string>Point</string>
          <string>com.bmwcarit.barefoot.topology.Graph</string>
          <string>Envelope2D</string>
          <string>com.bmwcarit.barefoot.matcher.Minset</string>
          <string>com.bmwcarit.barefoot.util.Tuple</string>
          <string>java.io.Serializable</string>
          <string>com.bmwcarit.barefoot.roadmap.package-info</string>
          <string>java.util.List</string>
          <string>com.bmwcarit.barefoot.matcher.Benchmark</string>
          <string>Polyline</string>
          <string>java.lang.Object</string>
          <string>com.bmwcarit.barefoot.roadmap.RoadMap$Index</string>
          <string>com.bmwcarit.barefoot.road.BaseRoad</string>
          <string>com.bmwcarit.barefoot.spatial.Vector</string>
          <string>com.bmwcarit.barefoot.topology.Path</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.bmwcarit.barefoot.util.ss</name>
        <entities>
          <string>java.lang.Throwable</string>
          <string>com.bmwcarit.barefoot.util.TimedSampleReader</string>
          <string>java.net.Socket</string>
          <string>java.sql.Connection</string>
          <string>com.bmwcarit.barefoot.util.Quadruple</string>
          <string>com.bmwcarit.barefoot.util.AbstractServer</string>
          <string>com.bmwcarit.barefoot.util.AbstractServer$ResponseFactory</string>
          <string>java.util.Date</string>
          <string>java.lang.System</string>
          <string>com.bmwcarit.barefoot.util.AbstractServer$RESULT</string>
          <string>com.bmwcarit.barefoot.util.PostgresSource</string>
          <string>java.util.concurrent.Callable</string>
          <string>com.bmwcarit.barefoot.util.AbstractServer$ClientHandler</string>
          <string>com.bmwcarit.barefoot.util.AbstractServer$RequestHandler</string>
          <string>java.net.ServerSocket</string>
          <string>java.sql.SQLException</string>
          <string>java.util.Calendar</string>
          <string>Test</string>
          <string>java.lang.Thread</string>
          <string>Polygon</string>
          <string>java.util.concurrent.ExecutorService</string>
          <string>java.io.PrintStream</string>
          <string>com.bmwcarit.barefoot.util.AbstractServerTest$TestServer$ResponseFactory$1</string>
          <string>com.bmwcarit.barefoot.util.Quintuple</string>
          <string>com.bmwcarit.barefoot.util.AbstractServerTest$TestServer</string>
          <string>com.bmwcarit.barefoot.util.SourceException</string>
          <string>com.bmwcarit.barefoot.util.AbstractServerTest$TestServer$ResponseFactory</string>
          <string>com.bmwcarit.barefoot.util.AbstractServer$ResponseHandler</string>
          <string>java.io.IOException</string>
          <string>com.bmwcarit.barefoot.util.AbstractServerTest</string>
          <string>java.net.UnknownHostException</string>
          <string>java.lang.Exception</string>
          <string>com.bmwcarit.barefoot.util.SampleReader</string>
          <string>com.bmwcarit.barefoot.util.Triple</string>
          <string>java.lang.InterruptedException</string>
          <string>java.sql.Statement</string>
          <string>java.lang.StringBuilder</string>
          <string>java.io.BufferedReader</string>
          <string>java.sql.DriverManager</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.bmwcarit.barefoot.markov.ss</name>
        <entities>
          <string>com.bmwcarit.barefoot.markov.StateTest$MockElem</string>
          <string>com.bmwcarit.barefoot.markov.KStateTest</string>
          <string>com.bmwcarit.barefoot.markov.StateTest$MockFactory</string>
          <string>java.util.UUID</string>
          <string>com.bmwcarit.barefoot.markov.StateTest</string>
          <string>com.bmwcarit.barefoot.markov.KStateTest$MockFactory</string>
          <string>com.bmwcarit.barefoot.markov.FilterTest$MockStates</string>
          <string>com.bmwcarit.barefoot.markov.KStateTest$MockElem</string>
          <string>com.bmwcarit.barefoot.markov.FilterTest$MockFilter</string>
          <string>com.bmwcarit.barefoot.markov.FilterTest$MockElement</string>
          <string>java.lang.Math</string>
          <string>com.bmwcarit.barefoot.markov.Filter</string>
          <string>com.bmwcarit.barefoot.markov.FilterTest</string>
          <string>com.bmwcarit.barefoot.markov.StateCandidate</string>
          <string>com.bmwcarit.barefoot.markov.StateTransition</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.bmwcarit.barefoot.spatial.ss</name>
        <entities>
          <string>com.bmwcarit.barefoot.spatial.Geography</string>
          <string>com.bmwcarit.barefoot.spatial.GeographyTest</string>
          <string>java.io.FileNotFoundException</string>
          <string>com.bmwcarit.barefoot.util.Stopwatch</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.bmwcarit.barefoot.scheduler.ss</name>
        <entities>
          <string>com.bmwcarit.barefoot.scheduler.Task</string>
          <string>com.bmwcarit.barefoot.scheduler.Group</string>
          <string>java.lang.Runtime</string>
          <string>java.util.concurrent.atomic.AtomicBoolean</string>
          <string>com.bmwcarit.barefoot.scheduler.Worker</string>
          <string>com.bmwcarit.barefoot.scheduler.StaticScheduler$InlineScheduler</string>
          <string>java.util.Deque</string>
          <string>java.util.concurrent.atomic.AtomicLong</string>
          <string>com.bmwcarit.barefoot.scheduler.StaticScheduler</string>
          <string>java.util.concurrent.locks.Lock</string>
          <string>java.util.concurrent.locks.Condition</string>
          <string>com.bmwcarit.barefoot.scheduler.Scheduler</string>
          <string>java.util.concurrent.atomic.AtomicInteger</string>
          <string>java.util.Queue</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
      <edu.usc.softarch.arcade.facts.ConcernCluster>
        <name>com.bmwcarit.barefoot.analysis.ss</name>
        <entities>
          <string>com.bmwcarit.barefoot.analysis.DBCAN$SearchIndex</string>
          <string>java.util.Map$Entry</string>
          <string>com.bmwcarit.barefoot.analysis.DBSCAN</string>
          <string>com.bmwcarit.barefoot.analysis.DBRCAN</string>
          <string>com.bmwcarit.barefoot.analysis.DBSCAN$SearchIndex</string>
          <string>java.lang.Iterable</string>
          <string>java.util.TreeMap</string>
          <string>com.bmwcarit.barefoot.analysis.DBCAN</string>
          <string>java.util.LinkedList</string>
          <string>java.util.Comparator</string>
          <string>java.util.NoSuchElementException</string>
          <string>com.bmwcarit.barefoot.analysis.DBCAN$ISearchIndex</string>
          <string>com.bmwcarit.barefoot.analysis.DBRCAN$SearchIndex</string>
          <string>java.util.Collections</string>
          <string>java.util.SortedMap</string>
          <string>com.bmwcarit.barefoot.analysis.DBRCAN$1</string>
          <string>com.bmwcarit.barefoot.analysis.DBRCAN$SearchIndex$1</string>
        </entities>
      </edu.usc.softarch.arcade.facts.ConcernCluster>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BdcSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
  <edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
    <clusters>
      <edu.usc.softarch.arcade.facts.ConcernCluster reference="../../../edu.usc.softarch.arcade.antipattern.detection.BdcSmell/clusters/edu.usc.softarch.arcade.facts.ConcernCluster[4]"/>
    </clusters>
  </edu.usc.softarch.arcade.antipattern.detection.BuoSmell>
</linked-hash-set>
